#defualt alias 
# Helpful aliases
alias c='clear' # clear terminal
alias reboot="sudo reboot"
alias poweroff="sudo poweroff"
alias logout='sudo pkill -u $USER' 
alias vc="code ."
alias reload="source ~/.zshrc"
alias p10k="p10k configure"
alias status="sudo systemctl status $1"
alias enable="sudo systemctl enable $1"
alias restart="sudo systemctl restart $1"
alias disable="sudo systemctl disable $1"
alias home='printf "%s\n" "$HOME"'
alias path='printf "%s\n" "$PATH"'
alias update="sudo apt update && sudo apt upgrade -y"
# Always mkdir a path (this doesn't inhibit functionality to make a single dir)
alias mkdir='mkdir -p'
alias install="sudo apt-get install $1"
alias remove="sudo install -R $1 $2 $3"
alias ls="eza -a --icons"
alias ll='eza -al --icons'
alias lt='eza -a --tree --level=2  --icons'
alias l='eza -lh --icons=auto' # long list
alias ld='eza -lhD --icons=auto' # long list dirs
alias i3reload='i3-msg reload'
alias i3reset='i3-msg restart'
# Directory navigation shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..' 
#docker
alias dr="docker"
alias drreset="sudo docker system prune"
alias dri="sudo docker images"
alias drpl="sudo docker pull"
alias drps="sudo docker ps"
alias drpu="sudo docker push"
alias drr="sudo docker run"
alias drs="sudo docker search"
alias drcl="sudo docker container ls"
alias drforce="sudo docker-compose up --force-recreate -d"
# git aliases
alias ga='git add'
alias gaa='git add all'
alias gco='git checkout'
alias gcb='git checkout -b'
alias gcmsg='git commit --message'
alias gd='git diff'
alias gl='git pull'
alias gp='git push'
alias gpsup='git push --set-upstream origin $(git_current_branch)'
alias gst='git status'
alias gc='git commit -m'
#alias gp='git'
#alias gpu='git'
#golang
#alias air='~/.air'
alias air='$(go env GOPATH)/bin/air'
alias gob='go build' #Build your code
alias goc='go clean' #	Removes object files from package source directories
alias god='go doc' #	Prints documentation comments
alias goe='go env' #	Prints Go environment information
alias gof='go fmt' #	Gofmt formats (aligns and indents) Go programs.
alias gofa='go fmt ./...' #	Run go fmt for all packages in current directory, recursively
alias gofx='go fix' #	Update packages to use a new API
alias gog='go get' #	Downloads packages and then installs them to $GOPATH
alias goga='go get ./...' #	Installs all dependencies in current directory, recursively
alias goi='go install' #	Compiles and installs packages to $GOPATH
alias gol='go list' #	Lists Go packages
alias gom='go mod' #	Access to operations on modules
alias gomt='go mod tidy' #	Tidies up the go.mod file
alias gopa='cd $GOPATH' #	Takes you to $GOPATH
alias gopb='cd $GOPATH/bin' #	Takes you to $GOPATH/bin
alias gops='cd $GOPATH/src' #	Takes you to $GOPATH/src
alias gor='go run' #	Compiles and runs your code
alias got='go test' #	Runs tests
alias gota='go test ./...' #	Runs tests in all subdirectories
alias goto='go tool' #	Prints all the available tools
alias gotoc='go tool compile' #	Generates object file
alias gotod='go tool dist' #	Utility to bootstrap, build and test go runtime
alias gotofx='go tool fix' #	Fixes an application to use newer features
alias gov='go vet' #	Vet examines Go source code and reports suspicious constructs
alias gove='go version' #	Prints Go version
alias gow='go work' #	Work provides access to operations on workspaces

alias pgstart="echo 'starting PostgreSQL...' && \
    echo && \
    sudo docker start postgresql && \
    sudo docker ps -f name=postgresql && \
    echo && \
    echo 'PostgreSQL docker container started...' && \
    echo 'starting pgAdmin4...' && \
    sudo docker start pgAdmin && \
    echo 'Username: pguser' && \
    echo 'Password: pgpass' && \
    ip=\$(sudo docker inspect postgresql | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    pgadmin_ip=\$(sudo docker inspect pgAdmin | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'Postgres IP Address: ' \$ip && \
    echo && \
    echo 'pgAdmin IP Address: ' \$pgadmin_ip && \
    echo 'E-mail: drunkleen@local.com ' && \
    echo 'Password: 12345' && \
    echo 'IP Address: ' \$ip && \
    echo && \
    echo 'PostgreSQL connection string: postgres://pguser:pgpass@'\$ip':5432/DatabaseName' && \
    echo 'pgAdmin4 URL: http://'\$pgadmin_ip':80' && \
    echo"

alias pgstop="echo 'stopping PostgreSQL...' && \
    echo && \
    sudo docker stop postgresql && \
    echo 'PostgreSQL docker container stopped...' && \
    sudo docker stop pgAdmin && \
    echo 'pgAdmin4 docker container stopped...'"


alias mongostart=" echo 'starting MongoDB...' && \
    echo && \
    sudo docker start mongodb && \
    sudo docker ps -f name=mongodb && \
    echo && \
    echo 'mongoDB docker container started...' && \
    echo 'URL: mongodb://localhost:27017' && \
    echo 'IP Address: 127.0.0.1'"


alias mongostop=" echo 'stopping MongoDB...' && \
    echo && sudo docker stop mongodb && \
    echo 'mongoDB docker container stopped...'"

alias phpstart="echo 'starting MySQL_Apache_Php_PhpMyAdmin...' && \
    echo && \
    sudo docker start mysql && \
    echo 'MySQL docker container started...' && \
    sudo docker start apache && \
    echo 'apache docker container started...' && \
    sudo docker start php && \
    echo 'php docker container started...' && \
    sudo docker start phpmyadmin && \
    echo 'phpmyadmin docker container started...' && \
    sudo docker ps  && \
    echo && \
    echo 'Mysql Specifications:' && \
    echo 'Username: otherUser' && \
    echo 'Password: password' && \
    echo 'Mysql Name: dbtest' && \
    echo 'Mysql Root Password: rootpassword' && \
    echo && \
    ip=\$(sudo docker inspect mysql | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'Mysql IP Address: ' \$ip':3306' && \
    php_ip=\$(sudo docker inspect php | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'php IP Address: ' \$php_ip':80' && \
    phpmyadmin_ip=\$(sudo docker inspect phpmyadmin | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'PhpMyAdmin IP Address: ' \$phpmyadmin_ip':8081' && \
    echo"

alias phpstop="echo 'stopping MySQL...' && \
    sudo docker stop mysql && \
    echo 'mysql docker container stopped...' && \
    echo && \
    echo 'stopping Apache...' && \
    sudo docker stop apache && \
    echo 'Apache docker container stopped...' && \
    echo && \
    echo 'stopping php...' && \
    sudo docker stop php && \
    echo 'php docker container stopped...' && \
    echo 'stopping php...' && \
    sudo docker stop phpmyadmin && \
    echo 'phpmyadmin docker container stopped...' && \
    echo "

alias monitoringstart="echo 'starting Grafana_Loki_Prometheus...' && \
    echo && \
    sudo docker start grafana && \
    echo 'Grafana docker container started...' && \
    sudo docker start prometheus && \
    echo 'prometheus docker container started...' && \
    sudo docker start loki && \
    echo 'loki docker container started...' && \
    sudo docker ps  && \
    echo && \
    echo 'Monitoring Access IP Address:' && \
    echo 'grafana IP Address:  127.0.0.1:3000' && \
    echo 'Grafana Username: admin' && \
    echo 'Grafana Password: adminpass123456' && \
    echo 'prometheus IP Address: 127.0.0.1:9090' && \
    echo 'loki IP Address:  127.0.0.1:3100' && \
    echo && \
    echo 'Monitoring Inspect IP Address:' && \
    gip=\$(sudo docker inspect grafana | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'grafana IP Address: ' \$gip':3000' && \
    pip=\$(sudo docker inspect prometheus | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'prometheus IP Address: ' \$pip':9090' && \
    lip=\$(sudo docker inspect loki | grep -Po '\"IPAddress\":\s*\"\K[0-9.]+(?=\")' | head -n 1) && \
    echo 'loki IP Address: ' \$lip':9090' && \
    echo"
alias monitoringstop="echo 'stopping Grafana...' && \
    sudo docker stop grafana && \
    echo 'grafana docker container stopped...' && \
    echo && \
    echo 'stopping  Prometheus...' && \
    sudo docker stop prometheus && \
    echo 'Prometheus docker container stopped...' && \
    echo && \
    echo 'stopping Loki...' && \
    sudo docker stop loki && \
    echo 'Loki docker container stopped...' && \
    echo "    


